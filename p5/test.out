struct atp{
    int f;
    bool g;
}

int func1(int num, bool boo) {
    ret 1;
}

bool func2(int e) {
    ret fls;
}

void func3() {
}

bool func4() {
    ret 0;
}

void func5() {
    ret 1;
}

struct set{
    int h;
}

int main() {
    int a;
    int a1;
    bool b;
    bool b1;
    void c;
    void c1;
    bool d;
    bool d1;
    struct atp e;
    struct set e1;
    d(bool) = (a(int) && a1(int));
    d(bool) = (a(int) && b(bool));
    d(bool) = (a(int) && c);
    d(bool) = (a(int) && d(bool));
    d(bool) = (a(int) && e(atp));
    d(bool) = (b(bool) && b(bool));
    d(bool) = (a(int) || a1(int));
    d(bool) = (a(int) || b(bool));
    d(bool) = (a(int) || c);
    d(bool) = (a(int) || d(bool));
    d(bool) = (a(int) || e(atp));
    d(bool) = (b(bool) || b(bool));
    d(bool) = (!a(int));
    d(bool) = (!b(bool));
    d(bool) = (!c);
    d(bool) = (!d(bool));
    d(bool) = (!e(atp));
    if (a(int)) {
    }
    if (b(bool)) {
    }
    if (c) {
    }
    if (d(bool)) {
    }
    if (e(atp)) {
    }
    while (a(int)) {
    }
    while (b(bool)) {
    }
    while (c) {
    }
    while (d(bool)) {
    }
    while (e(atp)) {
    }
    repeat (a(int)) {
    }
    repeat (b(bool)) {
    }
    repeat (c) {
    }
    repeat (d(bool)) {
    }
    repeat (e(atp)) {
    }
    a(int) = (a(int) + a1(int));
    b(bool) = (b(bool) + a(int));
    c = (c + b(bool));
    d(bool) = (d(bool) - a(int));
    e(atp).f(int) = (a(int) + e(atp).f(int));
    a(int) = (a(int) < a1(int));
    b(bool) = (a(int) > a1(int));
    b(bool) = (a(int) <= c);
    b(bool) = (d(bool) < b1(bool));
    e(atp).f(int) = (a(int) >= a1(int));
    d(bool) = (a(int) == a1(int));
    d(bool) = (b(bool) == b1(bool));
    d(bool) = (c != b1(bool));
    d(bool) = (d(bool) == d1(bool));
    d(bool) = (e(atp).f(int) != e(atp).f(int));
    d(bool) = (e(atp).f(int) == b1(bool));
    a(int) = 1;
    b(bool) = fls;
    a(int) = fls;
    c = 1;
    d(bool) = "yes";
    e(atp).f(int) = "no";
    print << a(int);
    print << b(bool);
    print << c;
    print << d(bool);
    print << e(atp);
    print << e(atp).f(int);
    print << "Hello World";
    receive >> a(int);
    receive >> b(bool);
    receive >> c;
    receive >> d(bool);
    receive >> e(atp);
    receive >> e(atp).f(int);
    receive >> e(atp).g(bool);
    func1(int,bool->int)(a(int), b(bool));
    func2(int->bool)(a(int));
    func3(->void)();
    func1(int,bool->int)(a(int), c);
    func2(int->bool)();
    func3(->void)();
    c = func3(->void)();
    a(int) = func1(int,bool->int)(a(int), b(bool));
    b(bool) = func1(int,bool->int)(a(int), b(bool));
    b(bool) = func2(int->bool)(a(int));
    a(int) = func2(int->bool)(a(int));
    print << func1(int,bool->int)(a(int), b(bool));
    print << atp(struct);
    print << e(atp);
    print << func3(->void)();
    receive >> func1(int,bool->int);
    receive >> atp(struct);
    receive >> e(atp);
    d1(bool) = (func3(->void)() == func5(->void)());
    d2 = (func1(int,bool->int)() == func2(int->bool)());
    func1(int,bool->int) = func2(int->bool)();
    func1(int,bool->int) = func2(int->bool);
    d1(bool) = (e1(set) == e(atp));
    atp(struct) = set(struct);
    e1(set) = e(atp);
    a(int)();
    func4(->bool)();
}

