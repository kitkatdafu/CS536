struct atp{
    int f;
    bool g;
}

int func1(int num, bool boo) {
    ret 1;
}

bool func2(int e) {
    ret fls;
}

void func3() {
}

void func5() {
}

struct set{
    int h;
}

int main() {
    int a;
    int a1;
    bool b;
    bool b1;
    bool d;
    bool d1;
    struct atp e;
    struct set e1;
    d(bool) = (b(bool) && b(bool));
    d(bool) = (b(bool) || b(bool));
    d(bool) = (!b(bool));
    d(bool) = (!d(bool));
    if (b(bool)) {
    }
    if (d(bool)) {
    }
    while (b(bool)) {
    }
    while (d(bool)) {
    }
    repeat (a(int)) {
    }
    a(int) = (a(int) + a1(int));
    e(atp).f(int) = (a(int) + e(atp).f(int));
    b(bool) = (a(int) > a1(int));
    d(bool) = (a(int) == a1(int));
    d(bool) = (b(bool) == b1(bool));
    d(bool) = (d(bool) == d1(bool));
    d(bool) = (e(atp).f(int) != e(atp).f(int));
    a(int) = 1;
    b(bool) = fls;
    print << a(int);
    print << b(bool);
    print << d(bool);
    print << e(atp).f(int);
    print << "Hello World";
    receive >> a(int);
    receive >> b(bool);
    receive >> d(bool);
    receive >> e(atp).f(int);
    receive >> e(atp).g(bool);
    func1(int,bool->int)(a(int), b(bool));
    func2(int->bool)(a(int));
    func3(->void)();
    a(int) = func1(int,bool->int)(a(int), b(bool));
    b(bool) = func2(int->bool)(a(int));
}

